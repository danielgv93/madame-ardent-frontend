---
import Layout from '../layouts/Layout.astro';
import Button from '../components/Button.astro';
import Input from '../components/Input.astro';
import Label from '../components/Label.astro';
---

<Layout title="Login">
	<main class="min-h-screen bg-gradient-to-br from-purple-100 via-pink-50 to-orange-100 flex items-center justify-center px-4">
		<div class="max-w-md w-full p-8 bg-white/80 backdrop-blur-sm rounded-xl shadow-xl border border-white/20">
			<h1 class="text-3xl font-bold mb-8 text-center text-purple-900">Login</h1>
		
		<form id="loginForm" class="space-y-4">
			<div>
				<Label for="email" class="text-purple-700" required>Email</Label>
				<Input
					type="email"
					id="email"
					name="email"
					required
					variant="transparent"
					size="lg"
					placeholder="tu@email.com"
				/>
			</div>
			
			<div>
				<Label for="password" class="text-purple-700" required>Contraseña</Label>
				<Input
					type="password"
					id="password"
					name="password"
					required
					variant="transparent"
					size="lg"
					placeholder="••••••••"
				/>
			</div>
			
			<Button
				type="submit"
				variant="primary"
				size="lg"
				class="w-full"
			>
				Iniciar Sesión
			</Button>
		</form>
		
		<div id="message" class="mt-6 p-4 rounded-lg hidden backdrop-blur-sm"></div>
		</div>
	</main>
</Layout>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		const form = document.getElementById('loginForm') as HTMLFormElement;
		const messageDiv = document.getElementById('message') as HTMLDivElement;
		
		form.addEventListener('submit', async (e) => {
			e.preventDefault();
			
			const formData = new FormData(form);
			const email = formData.get('email') as string;
			const password = formData.get('password') as string;
			
			try {
				const response = await fetch('/api/auth/login', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({ email, password }),
				});
				
				const data = await response.json();
				
				if (response.ok) {
					localStorage.setItem('token', data.token);
					localStorage.setItem('user', JSON.stringify(data.user));
					
					messageDiv.className = 'mt-6 p-4 rounded-lg backdrop-blur-sm bg-green-100/80 text-green-800 border border-green-200';
					messageDiv.textContent = 'Login successful! Redirecting...';
					messageDiv.classList.remove('hidden');
					
					setTimeout(() => {
						window.location.href = '/dashboard';
					}, 1500);
				} else {
					messageDiv.className = 'mt-6 p-4 rounded-lg backdrop-blur-sm bg-red-100/80 text-red-800 border border-red-200';
					messageDiv.textContent = data.error || 'Login failed';
					messageDiv.classList.remove('hidden');
				}
			} catch (error) {
				messageDiv.className = 'mt-6 p-4 rounded-lg backdrop-blur-sm bg-red-100/80 text-red-800 border border-red-200';
				messageDiv.textContent = 'Network error. Please try again.';
				messageDiv.classList.remove('hidden');
			}
		});
	});
</script>