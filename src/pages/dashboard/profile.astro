---
import DashboardLayout from '../../layouts/DashboardLayout.astro';
import SectionHeader from '../../components/dashboard/SectionHeader.astro';
import Card from '../../components/dashboard/Card.astro';
import Button from '../../components/Button.astro';
---

<DashboardLayout title="Editar Perfil">
    <div class="max-w-4xl mx-auto">
        <div class="space-y-6">
            <!-- Profile Header -->
            <SectionHeader 
                title="Información del Perfil"
                description="Actualiza tu información personal y configuración de la cuenta."
            />

            <!-- Profile Form -->
            <Card>
                    <form id="profile-form" class="space-y-6">
                        <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
                            <!-- Name -->
                            <div>
                                <label for="name" class="block text-sm font-medium text-gray-700">
                                    Nombre Completo
                                </label>
                                <input
                                    type="text"
                                    id="name"
                                    name="name"
                                    required
                                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                                    placeholder="Tu nombre completo"
                                />
                            </div>

                            <!-- Email -->
                            <div>
                                <label for="email" class="block text-sm font-medium text-gray-700">
                                    Correo Electrónico
                                </label>
                                <input
                                    type="email"
                                    id="email"
                                    name="email"
                                    required
                                    disabled
                                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm bg-gray-50 text-gray-500 cursor-not-allowed sm:text-sm"
                                    placeholder="tu@email.com"
                                />
                                <p class="mt-1 text-xs text-gray-500">El email no puede ser modificado</p>
                            </div>
                        </div>

                        <!-- Password Section -->
                        <div class="border-t border-gray-200 pt-6">
                            <h4 class="text-lg font-medium text-gray-900 mb-4">Cambiar Contraseña</h4>
                            <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
                                <div>
                                    <label for="current-password" class="block text-sm font-medium text-gray-700">
                                        Contraseña Actual
                                    </label>
                                    <input
                                        type="password"
                                        id="current-password"
                                        name="currentPassword"
                                        class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                                        placeholder="Contraseña actual"
                                    />
                                </div>

                                <div>
                                    <label for="new-password" class="block text-sm font-medium text-gray-700">
                                        Nueva Contraseña
                                    </label>
                                    <input
                                        type="password"
                                        id="new-password"
                                        name="newPassword"
                                        class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                                        placeholder="Nueva contraseña"
                                    />
                                </div>

                                <div class="sm:col-span-2">
                                    <label for="confirm-password" class="block text-sm font-medium text-gray-700">
                                        Confirmar Nueva Contraseña
                                    </label>
                                    <input
                                        type="password"
                                        id="confirm-password"
                                        name="confirmPassword"
                                        class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                                        placeholder="Confirmar nueva contraseña"
                                    />
                                </div>
                            </div>
                        </div>

                        <!-- Profile Settings -->
                        <div class="border-t border-gray-200 pt-6">
                            <h4 class="text-lg font-medium text-gray-900 mb-4">Configuración de Perfil</h4>
                            <div class="space-y-4">
                                <div class="flex items-start">
                                    <div class="flex items-center h-5">
                                        <input
                                            id="notifications"
                                            name="notifications"
                                            type="checkbox"
                                            class="focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded"
                                        />
                                    </div>
                                    <div class="ml-3 text-sm">
                                        <label for="notifications" class="font-medium text-gray-700">
                                            Recibir notificaciones por email
                                        </label>
                                        <p class="text-gray-500">
                                            Recibe notificaciones cuando lleguen nuevos formularios de contacto.
                                        </p>
                                    </div>
                                </div>

                                <div class="flex items-start">
                                    <div class="flex items-center h-5">
                                        <input
                                            id="weekly-summary"
                                            name="weeklySummary"
                                            type="checkbox"
                                            class="focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded"
                                        />
                                    </div>
                                    <div class="ml-3 text-sm">
                                        <label for="weekly-summary" class="font-medium text-gray-700">
                                            Resumen semanal
                                        </label>
                                        <p class="text-gray-500">
                                            Recibe un resumen semanal de la actividad en tu dashboard.
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="flex justify-end space-x-3 pt-6 border-t border-gray-200">
                            <Button
                                type="button"
                                id="cancel-btn"
                                variant="secondary"
                                size="md"
                            >
                                Cancelar
                            </Button>
                            <Button
                                type="submit"
                                variant="action"
                                size="md"
                            >
                                Guardar Cambios
                            </Button>
                        </div>
                    </form>
            </Card>

            <!-- Message Area -->
            <div id="message" class="hidden"></div>
        </div>
    </div>

    <script>
        import { authenticatedFetch } from '../../lib/client-api.ts';
        import { getCurrentUser } from '../../lib/auth-client.ts';
        
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('profile-form') as HTMLFormElement;
            const messageDiv = document.getElementById('message') as HTMLDivElement;
            const cancelBtn = document.getElementById('cancel-btn');
            
            // Cargar datos del usuario actual
            loadUserData();
            
            // Manejar envío del formulario
            form.addEventListener('submit', handleFormSubmit);
            
            // Manejar botón cancelar
            if (cancelBtn) {
                cancelBtn.addEventListener('click', loadUserData);
            }
            
            function loadUserData() {
                const user = getCurrentUser();
                if (user) {
                    const nameInput = document.getElementById('name') as HTMLInputElement;
                    const emailInput = document.getElementById('email') as HTMLInputElement;
                    
                    if (nameInput) nameInput.value = user.name || '';
                    if (emailInput) emailInput.value = user.email || '';
                }
            }
            
            async function handleFormSubmit(e: Event) {
                e.preventDefault();
                
                const formData = new FormData(form);
                const updateData: any = {
                    name: formData.get('name')
                };
                
                // Verificar si se está cambiando la contraseña
                const currentPassword = formData.get('currentPassword') as string;
                const newPassword = formData.get('newPassword') as string;
                const confirmPassword = formData.get('confirmPassword') as string;
                
                if (currentPassword || newPassword || confirmPassword) {
                    if (!currentPassword || !newPassword || !confirmPassword) {
                        showMessage('Para cambiar la contraseña, todos los campos de contraseña son obligatorios.', 'error');
                        return;
                    }
                    
                    if (newPassword !== confirmPassword) {
                        showMessage('Las contraseñas nuevas no coinciden.', 'error');
                        return;
                    }
                    
                    if (newPassword.length < 6) {
                        showMessage('La nueva contraseña debe tener al menos 6 caracteres.', 'error');
                        return;
                    }
                    
                    updateData.currentPassword = currentPassword;
                    updateData.newPassword = newPassword;
                }
                
                // Agregar configuraciones de perfil
                updateData.notifications = formData.get('notifications') === 'on';
                updateData.weeklySummary = formData.get('weeklySummary') === 'on';
                
                try {
                    const response = await authenticatedFetch('/api/users/profile', {
                        method: 'PUT',
                        body: JSON.stringify(updateData)
                    });
                    
                    const result = await response.json();
                    
                    if (response.ok) {
                        // Actualizar datos del usuario en localStorage
                        const currentUser = getCurrentUser();
                        if (currentUser) {
                            currentUser.name = updateData.name;
                            localStorage.setItem('user', JSON.stringify(currentUser));
                        }
                        
                        showMessage('Perfil actualizado correctamente.', 'success');
                        
                        // Limpiar campos de contraseña
                        const passwordFields = ['current-password', 'new-password', 'confirm-password'];
                        passwordFields.forEach(fieldId => {
                            const field = document.getElementById(fieldId) as HTMLInputElement;
                            if (field) field.value = '';
                        });
                        
                    } else {
                        showMessage(result.error || 'Error al actualizar el perfil.', 'error');
                    }
                } catch (error) {
                    console.error('Error updating profile:', error);
                    showMessage('Error de conexión. Inténtalo de nuevo.', 'error');
                }
            }
            
            function showMessage(text: string, type: 'success' | 'error') {
                if (messageDiv) {
                    messageDiv.textContent = text;
                    messageDiv.className = `rounded-md p-4 ${
                        type === 'success' 
                            ? 'bg-green-100 text-green-700 border border-green-200' 
                            : 'bg-red-100 text-red-700 border border-red-200'
                    }`;
                    messageDiv.classList.remove('hidden');
                    
                    // Auto-hide después de 5 segundos
                    setTimeout(() => {
                        messageDiv.classList.add('hidden');
                    }, 5000);
                }
            }
        });
    </script>
</DashboardLayout>